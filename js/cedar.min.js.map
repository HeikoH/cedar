{"version":3,"file":"cedar.min.js","sources":["../../src/cedar.js"],"names":["factory","define","amd","vg","d3","module","exports","require","window","Cedar","baseUrl","src","cdnProtocol","cdnUrl","document","currentScript","substr","lastIndexOf","location","protocol","options","spec","self","this","opts","width","undefined","height","autolabels","_events","_definition","_defaultDefinition","_view","_methodQueue","_pendingXhr","definition","Error","getJson","err","data","_purgeMethodQueue","override","_getSpecificationUrl","type","specification","dataset","query","_mixin","_defaultQuery","Object","defineProperty","get","set","val","prototype","chartTypes","canDraw","drawable","errs","show","_addToMethodQueue","elementId","select","_elementId","_renderer","renderer","token","_token","chk","issues","join","update","emit","_remove","compiledMappings","_applyDefaultsToMappings","mappings","inputs","queryFromSpec","JSON","parse","_supplant","stringify","template","_mergeRecursive","url","values","_renderSpec","_createFeatureServiceRequest","cb","console","dir","ex","_placeLabels","chartCtor","el","parseInt","style","_attach","fields","x","field","y","lengths","length","features","forEach","feature","axis","attributes","toString","index","angle","axes","properties","labels","value","titleOffset","opt","view","items","model","scene","item","datum","key","hasPropertySet","props","clearSelection","eventName","_handler","_handlers","handler","on","off","_validateMappings","input","missingInputs","i","required","name","push","_validateData","Array","isArray","firstRow","hasOwnProperty","fld","_getMappingFieldName","mappingName","fieldName","defn","defaultQuery","where","returnGeometry","returnDistinctValues","returnIdsOnly","returnCountOnly","outFields","f","indexOf","evtName","evt","registeredHandler","callback","log","args","method","action","apply","json","message","source","arguments","entries","p","mergedQuery","bbox","geometry","bboxArr","split","xmin","ymin","xmax","ymax","inSR","groupByFieldsForStatistics","group","outStatistics","count","orderByFields","statisticType","onStatisticField","outStatisticFieldName","sort","_serializeQueryParams","tmpl","params","replace","a","b","r","_getTokenValue","obj1","obj2","constructor","e","tokens","tokenName","tmpTokens","tokenNameParts","str","encodeURIComponent","queryString"],"mappings":"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","sourcesContent":["/**\n * Cedar\n *\n * Generic charting / visualization library for the ArcGIS Platform\n * that leverages vega + d3 internally.\n */\n(function (factory) {\n  /* global module */\n  'use strict';\n  //define an AMD module that relies on 'vega'\n  if (typeof define === 'function' && define.amd) {\n    define(['vega', 'd3'], function (vg, d3) {\n      return factory(vg, d3);\n    });\n  //define a common js module that relies on 'vega'\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(require('vega'), require('d3'));\n  }\n\n  if (typeof window !== 'undefined' && window.vg && window.d3) {\n    window.Cedar = factory(window.vg, window.d3);\n  }\n} (function (vg, d3) {\n  'use strict';\n\n  // get cedar root URL for loading chart specs\n  var baseUrl = (function() {\n    var cdnProtocol = 'http:';\n    var cdnUrl = '//esri.github.io/cedar/js';\n    var src;\n    if (window && window.document) {\n      src = (window.document.currentScript && window.document.currentScript.src);\n      if (src) {\n        // real browser, get base url from current script\n        return src.substr(0, src.lastIndexOf('/'));\n      } else {\n        // ie, set base url to CDN\n        // NOTE: could fallback to CDN only if can't find any scripts named cedar \n        return (window.document.location ? window.document.location.protocol : cdnProtocol) + cdnUrl;\n      }\n    } else {\n      // node, set base url to CDN\n      return cdnProtocol + cdnUrl;\n    }\n  })();\n\n/**\n * Constructor\n * @param {object} options Cedar options\n */\nvar Cedar = function Cedar(options){\n  //close over this for use in callbacks\n  var self = this;\n\n  //ensure an opts object\n  var opts = options || {};\n\n  var spec;\n\n\n  /**\n   * Internals for holding state\n   */\n\n  // Cedar configuration such as size\n  this.width = undefined;\n  this.height = undefined;\n  this.autolabels = true;\n\n  // Array to hold event handlers\n  this._events = [];\n\n  //initialize the internal definition hash\n  this._definition = Cedar._defaultDefinition();\n\n  //the vega view aka the chart\n  this._view = undefined;\n\n  //queue to hold methods called while\n  //xhrs are in progress\n  this._methodQueue=[];\n\n  // override base URL \n  if (opts.baseUrl) {\n    this.baseUrl = opts.baseUrl;\n  }\n\n  /**\n   * Flag used to determine if the library is\n   * waiting for an xhr to return. \n   */\n  this._pendingXhr = false;\n\n  //defintion \n  if(opts.definition){\n    //is it an object or string(assumed to be url)\n    if(typeof opts.definition === 'object'){\n      //hold onto the definition\n      this._definition = opts.definition;\n    }else if(typeof opts.definition === 'string' ){ \n      //assume it's a url (relative or abs) and fetch the definition object\n      this._pendingXhr = true;\n      Cedar.getJson(opts.definition, function(err,data){\n        self._pendingXhr = false;\n        self._definition = data; \n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter definition must be an object or string (url)');\n    }\n  }\n\n  if(opts.override) {\n    this._definition.override = opts.override;\n  }\n\n  // specification\n\n  // first, check for pre-defined chart type passed as \"type\"\n  spec = this._getSpecificationUrl(opts.type);\n\n  // if url or object passed used that\n  if(opts.specification){\n    spec = opts.specification;\n  }\n\n  if (spec) {\n    //is it an object or string(assumed to be url)\n    if(typeof spec === 'object'){\n      //hold onto the template\n      this._definition.specification = spec;\n\n    }else if(typeof spec === 'string' ){ \n      //assume it's a url (relative or abs) and fetch the template object\n      this._pendingXhr = true;\n      Cedar.getJson(spec, function(err,data){\n        self._pendingXhr = false;\n        self._definition.specification = data; \n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter specification must be an object or string (url)');\n    }\n  }\n\n  //allow a dataset to be passed in...\n  if(opts.dataset && typeof opts.dataset === 'object'){\n    opts.dataset.query = Cedar._mixin({}, Cedar._defaultQuery(), opts.dataset.query);\n    //assign it\n    this._definition.dataset = opts.dataset;\n  }\n\n  /**\n   * Properties\n   *\n   * ES 5.1 syntax, so IE 8 & lower won't work\n   * \n   * If the val is a url, should we expect\n   * cedar to fetch the object? \n   * \n   * I'd say no... as that violates the principal \n   * of least suprise. Also - cedar has a .getJSON\n   * helper method the dev should use.\n   * \n   */\n      \n  Object.defineProperty(this, 'dataset', {\n    get: function() {\n        return this._definition.dataset;\n    },\n    set: function(val) {\n       this._definition.dataset = val;\n    }\n  });\n\n  Object.defineProperty(this, 'specification', {\n    get: function() {\n        return this._definition.specification;\n    },\n    set: function(val) {\n      this._definition.specification = val;\n    }\n  });\n\n  Object.defineProperty(this, 'override', {\n    get: function() {\n        return this._definition.override;\n    },\n    set: function(val) {\n      this._definition.override = val;\n    }\n  });  \n\n};\n\n// base URL of this library\nCedar.prototype.baseUrl = baseUrl;\n\n// default pre-defined chart types\nCedar.prototype.chartTypes = ['bar', 'bar-horizontal', 'bubble', 'pie', 'scatter', 'sparkline', 'time'];\n\n/**\n * Inspect the current state of the object\n * and determine if we have sufficient information\n * to render the chart\n * @return {object} Hash of the draw state + any missing requirements\n */\nCedar.prototype.canDraw = function(){\n\n  //dataset?\n  //dataset.url || dataset.data?\n  //dataset.mappings?\n  //specification?\n  //specification.template?\n  //specification.inputs?\n  //specification.inputs ~ dataset.mappings?\n  \n  return {drawable:true, errs:[]};\n\n};\n\n/**\n * Render a chart in the specified element\n * @param  {object} options \n * \n * options.elementId [required] Id of the Dom element into which the chart will be rendered\n * options.token     [optional] Token to be used if the data or spec are on a secured server\n */\nCedar.prototype.show = function(options){\n  if(this._pendingXhr){\n    \n    this._addToMethodQueue('show', [options]);\n\n  }else{\n\n    var err;\n    //ensure we got an elementId\n    if( !options.elementId ){\n      err= \"Cedar.show requires options.elementId\";\n    }\n    //check if element exists in the page\n    if(d3.select(options.elementId)[0][0] === null){\n      err = \"Element \" + options.elementId + \" is not present in the DOM\";\n     }\n  \n    //hold onto the id\n    this._elementId = options.elementId;\n    this._renderer = options.renderer || \"canvas\"; //default to canvas\n    this.width = options.width || undefined; // if not set in API, always base on current div size\n    this.height = options.height || undefined;\n    if(options.autolabels !== undefined && options.autolabels !== null){\n      this.autolabels = options.autolabels;\n    }\n    //hold onto the token\n    if(options.token){\n      this._token = options.token;\n    }\n\n    if( err ){\n      throw new Error( err );\n    }\n    var chk = this.canDraw();\n    if(chk.drawable){\n      //update centralizes the spec compilation & drawing\n      this.update();  \n    }else{\n      //report the issues\n      var errs = chk.issues.join(',');\n      throw new Error('Chart can not be drawn because: ' + errs);  \n    }\n    \n  }\n};\n\n/**\n * Render the chart using the internal state\n * Should be called after a user modifies the \n * of the dataset, query, mappings or template\n */\nCedar.prototype.update = function(){\n  var self = this;\n  \n  if ( this._view ) { \n    this.emit('update-start');\n  }\n\n  if(this._pendingXhr){\n    \n    this._addToMethodQueue('update');\n\n  }else{\n\n    if(this._view){\n      //remove handlers\n      //TODO Remove existing handlers\n      this._remove(this._view);\n    }\n    try{\n      //ensure we have required inputs or defaults \n      var compiledMappings = Cedar._applyDefaultsToMappings(this._definition.dataset.mappings, this._definition.specification.inputs); //Cedar._compileMappings(this._definition.dataset, this._definition.specification.inputs);\n\n      var queryFromSpec = Cedar._mixin({}, this._definition.specification.query, this._definition.dataset.query);\n      queryFromSpec = JSON.parse(Cedar._supplant(JSON.stringify(queryFromSpec), compiledMappings));\n\n      //allow binding to query properties\n      compiledMappings.query = queryFromSpec;\n\n      //compile the template + mappings --> vega spec\n      var spec = JSON.parse(Cedar._supplant(JSON.stringify(this._definition.specification.template), compiledMappings)); \n\n      // merge in user specified style overrides\n      spec = Cedar._mergeRecursive(spec, this._definition.override);\n\n      //if the spec has a url in the data node, delete it\n      if(spec.data[0].url){\n        delete spec.data[0].url;\n      }\n\n      if(this._definition.dataset.data){\n\n        //create the data node using the passed in data\n        spec.data[0].values = this._definition.dataset.data;\n        \n        //send to vega\n        this._renderSpec(spec);\n      \n      }else{\n      \n        //we need to fetch the data so\n        var url = Cedar._createFeatureServiceRequest(this._definition.dataset, queryFromSpec);\n      \n        //create a callback closure to carry the spec\n        var cb = function(err,data){\n      \n          //todo add error handlers for xhr and ags errors\n          spec.data[0].values = data;\n          console.dir(spec);\n          //send to vega\n          self._renderSpec(spec);\n\n        };\n\n        //fetch the data from the service\n        Cedar.getJson(url, cb);\n      }\n    }\n    catch(ex){\n      throw(ex);\n    }\n  }\n};\n\n/**\n * Render a fully cooked spec\n */\nCedar.prototype._renderSpec = function(spec){\n  var self = this;\n  try{\n    if(self.autolabels === true) {\n        spec = self._placeLabels(spec);\n    }\n    //use vega to parse the spec \n    //it will handle the spec as an object or url\n    vg.parse.spec(spec, function(chartCtor) { \n\n      //create the view\n      self._view = chartCtor({\n        el: self._elementId,\n        renderer: self._renderer\n      });\n\n      \n      var width = self.width || parseInt(d3.select(self._elementId).style('width'), 10) || 500;\n      var height = self.height || parseInt(d3.select(self._elementId).style('height'), 10) || 500;\n\n      //render into the element\n      self._view.width(width).height(height).update(); \n\n      //attach event proxies\n      self._attach(self._view);\n\n      if ( self._view ) { \n        self.emit('update-end');\n      }\n\n    });\n  }\n  catch(ex){\n    throw(ex);\n  }\n};\n\nCedar.prototype._placeLabels = function(spec) {\n  var self = this;\n  try{  \n    var fields = { \n        x: self._definition.dataset.mappings.x.field,\n        y: self._definition.dataset.mappings.y.field\n    };\n    var lengths = {x: 0, y: 0};\n    var length = 0;\n    spec.data[0].values.features.forEach(function(feature) {\n      ['x','y'].forEach(function(axis) {\n        length = (feature.attributes[fields[axis]] || \"\").toString().length;\n        if( length > lengths[axis]) {\n          lengths[axis] = length;  \n        }      \n      });\n    });\n\n    ['x','y'].forEach(function(axis, index) {\n      var angle = 0;\n      if (spec.axes[index].properties.labels.angle !== undefined) {\n        angle = spec.axes[index].properties.labels.angle.value;\n      }\n      if(spec.axes[index].type == 'y' ) {\n        angle = 100 - angle;\n      }      \n      spec.axes[index].titleOffset = lengths[axis] * angle/100 * 8 + 30;\n      //chart._view.model().defs().marks.axes[index].titleOffset = lengths[axis]*4+20\n    });\n    return spec;\n\n  } catch(ex) {\n    throw(ex);\n  }\n};\n/**\n * highlight marker based on attribute value\n */\nCedar.prototype.select = function( opt ) {\n  var self = this;\n  var view = this._view;\n  var items = view.model().scene().items[0].items[0].items;\n\n  items.forEach(function(item) {\n    if ( item.datum.data.attributes[opt.key] === opt.value ) {\n      if ( item.hasPropertySet(\"hover\") ) {\n        self._view.update({props:\"hover\", items:item});\n      }\n    }\n  });\n\n};\n\n\n/**\n * highlight marker based on attribute value\n */\nCedar.prototype.clearSelection = function( opt ) {\n  var self = this;\n  var view = this._view;\n  var items = view.model().scene().items[0].items[0].items;\n\n  if ( opt && opt.key ) {\n    items.forEach(function(item) {\n      if ( item.datum.data.attributes[opt.key] === opt.value ) {\n        self._view.update({props:\"update\", items:item});\n      }\n    });\n  } else {\n    //clear all \n    self._view.update();\n  }\n\n};\n\n\n// trigger callback \nCedar.prototype.emit = function(eventName) {\n  if (this._view._handler._handlers[ eventName ] && this._view._handler._handlers[ eventName ][0] !== undefined){\n    this._view._handler._handlers[ eventName ][0].handler();\n  }\n};\n\n/**\n * Attach the generic proxy handlers to the chart view\n */\nCedar.prototype._attach = function(view){\n  \n  view.on('mouseover', this._handler('mouseover'));\n  view.on('mouseout', this._handler('mouseout'));\n  view.on('click', this._handler(\"click\"));\n  view.on('update-start', this._handler('update-start'));\n  view.on('update-end', this._handler('update-end'));\n  \n};\n\n/**\n * Remove all event handlers from the view\n */\nCedar.prototype._remove = function(view){\n\n  view.off('mouseover');\n  view.off('mouseout');\n  view.off('click');\n  view.off('update-start');\n  view.off('update-end');\n  \n};\n\n/**\n * Helper function that validates that the \n * mappings hash contains values for all\n * the inputs\n * @param  {array} inputs   Array of inputs\n * @param  {object} mappings Hash of mappings\n * @return {array}          Missing mappings\n */\nCedar._validateMappings = function(inputs, mappings){\n  var missingInputs = [], input;\n  for(var i=0;i<inputs.length;i++){\n    input = inputs[i];\n    if(input.required){\n      if(!mappings[input.name]){\n        missingInputs.push(input.name);\n      }\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Validate that the incoming data has the fields expected\n * in the mappings\n */\nCedar._validateData = function(data, mappings){\n  var missingInputs = [];\n  if(!data.features || !Array.isArray(data.features)){\n    throw new Error('Data is expected to have features array!');\n  }\n  var firstRow = data.features[0].attributes;\n  for(var key in mappings){\n    if (mappings.hasOwnProperty(key)) {\n      var fld = Cedar._getMappingFieldName(key, mappings[key].field);\n      if(!firstRow.hasOwnProperty(fld)){\n        missingInputs.push(fld);\n      }\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Centralize and abstract the computation of\n * expected field names, based on the mapping name\n */\nCedar._getMappingFieldName = function(mappingName, fieldName){\n  var name = fieldName;\n  //if(mappingName.toLowerCase() === 'count'){\n  //  name = fieldName + '_SUM';\n  //}\n  return name;\n};\n\n/**\n * Return a default definition object\n */\nCedar._defaultDefinition = function(){\n  var defn = {\n    \"dataset\": {\n      \"query\": this._defaultQuery()\n    },\n    \"template\":{}\n  };\n\n  defn.dataset.query = Cedar._defaultQuery();\n\n  return defn;\n};\n\n/**\n * Default Query Object\n */\nCedar._defaultQuery = function(){\n  var defaultQuery = {\n    \"where\": \"1=1\",\n    \"returnGeometry\": false,\n    \"returnDistinctValues\": false,\n    \"returnIdsOnly\": false,\n    \"returnCountOnly\": false,\n    \"outFields\": \"*\",\n    \"f\": \"json\"\n  };\n  return defaultQuery;\n};\n\n/**\n * Get pre-defined spec url\n */\nCedar.prototype._getSpecificationUrl = function(spec){\n  if (this.chartTypes.indexOf(spec) !== -1) {\n    spec = this.baseUrl + '/charts/' + this.chartTypes[this.chartTypes.indexOf(spec)] + '.json';\n  }\n  return spec;\n};\n\n/**\n * Generic event handler proxy\n */\nCedar.prototype._handler = function(evtName) {\n  var self = this;\n  \n  //return a handler function w/ the events hash closed over\n  var handler = function(evt, item){\n    self._events.forEach( function(registeredHandler){\n      if(registeredHandler.type === evtName){\n        //invoke the callback with the data\n        if ( item ) {\n          registeredHandler.callback(evt, item.datum.data.attributes);\n        } else {\n          registeredHandler.callback(evt,null);\n        }\n      }\n    });\n  };\n  return handler;\n};\n\n/**\n * Add a handler for the named event\n */\nCedar.prototype.on = function(evtName, callback){\n  this._events.push({\"type\":evtName, \"callback\":callback});\n};\n\n/**\n * Remove a handler for the named event\n */\nCedar.prototype.off = function(evtName /*, callback */){\n  console.log('Handler for ' + evtName +' removed...');\n};\n\n\n/**\n * Creates an entry in the method queue, excuted \n * once a pending xhr is completed \n */\nCedar.prototype._addToMethodQueue = function(name, args){\n  this._methodQueue.push({ method: name, args: args });\n};\n\n/**\n * empties the method queue by calling the queued methods\n * This helps build a more syncronous api, while still\n * doing async things in the code\n */\nCedar.prototype._purgeMethodQueue = function(){\n  var self = this;\n  if(self._methodQueue.length > 0){\n\n    for(var i=0;i<self._methodQueue.length;i++){\n      var action = self._methodQueue[i];\n      self[action.method].apply(self, action.args);  \n    }\n  }\n};\n\n/**\n * fetch json from a url\n * @param  {string}   url      Url to json file\n * @param  {Function} callback node-style callback function (err, data)\n */\nCedar.getJson = function( url, callback ){\n  d3.json(url, function(err,data) {\n    if(err){\n      callback('Error loading ' + url + ' ' + err.message);\n    }\n    callback(null, data);\n  });\n};\n\n\nCedar._mixin = function(source) {\n    /*jshint loopfunc: true*/\n    // TODO: prob should replace w/ forEach()\n    for (var i = 1; i < arguments.length; i++) {\n        d3.entries(arguments[i]).forEach(function(p) {\n            source[p.key] = p.value;\n        });\n    }\n    return source;\n};\n\n/**\n * Given a dataset hash, create the feature service\n * query string\n */\nCedar._createFeatureServiceRequest = function( dataset, queryFromSpec ) {\n  var mergedQuery = Cedar._mixin({}, Cedar._defaultQuery(), queryFromSpec);\n\n  //Handle bbox\n  if(mergedQuery.bbox){\n    //make sure a geometry was not also passed in\n    if(mergedQuery.geometry){\n      throw new Error('Dataset.query can not have both a geometry and a bbox specified');\n    }\n    //get the bbox (W,S,E,N)\n    var bboxArr = mergedQuery.bbox.split(',');\n\n    //remove it so it's not serialized as-is\n    delete mergedQuery.bbox;\n\n    //cook it into a json string \n    mergedQuery.geometry = JSON.stringify({\"xmin\": bboxArr[0], \"ymin\": bboxArr[2],\"xmax\": bboxArr[1], \"ymax\": bboxArr[3] });\n    //set the spatial ref as geographic\n    mergedQuery.inSR = '4326';\n  }\n  if(!mergedQuery.groupByFieldsForStatistics && dataset.mappings.group) {\n      mergedQuery.groupByFieldsForStatistics = dataset.mappings.group.field;\n  }\n  if(!mergedQuery.outStatistics && dataset.mappings.count) {\n    mergedQuery.orderByFields = dataset.mappings.count.field + \"_SUM\";\n    mergedQuery.outStatistics = JSON.stringify([{\"statisticType\": \"sum\", \"onStatisticField\": dataset.mappings.count.field, \"outStatisticFieldName\": dataset.mappings.count.field + \"_SUM\"}]);\n  }\n\n\n\n  //iterate the mappings keys to check for sort\n  //-----------------------------------------------------------------\n  //This approach would seem 'clean' but if there are multiple fields\n  //to sort by, the order would be determined by how javascript decides to\n  //iterate the mappings property hash.\n  //Thus, using mappings.sort gives the developer explicit control\n  //-----------------------------------------------------------------\n  // var sort = [];\n  // for (var property in dataset.mappings) {\n  //   if (dataset.mappings.hasOwnProperty(property)) {\n  //     if(dataset.mappings[property].sort){\n  //       //ok - build up the sort\n  //       sort.push(dataset.mappings[property].field + ' ' + dataset.mappings[property].sort);\n  //     }\n  //   }\n  // }\n  // if(sort.length > 0){\n  //   mergedQuery.orderByFields = sort.join(',');\n  // }\n  //-----------------------------------------------------------------\n  //check for a sort passed directly in\n  if(dataset.mappings.sort){\n    mergedQuery.orderByFields = dataset.mappings.sort;\n  }\n\n  var url = dataset.url + \"/query?\" + this._serializeQueryParams(mergedQuery);\n  \n  if(dataset.token){\n    url = url + '&token=' + dataset.token;\n  }\n  \n  return url;\n};\n\nCedar._applyDefaultsToMappings = function(mappings, inputs){\n  var errs = [];\n  //loop over the inputs\n  for(var i =0; i < inputs.length; i++){\n    //get the input\n    var input = inputs[i];\n\n    //if it's required and not in the mappings, add an exception\n    if(input.required && !mappings[input.name] ){\n      errs.push(input.name);\n    }\n    \n    //if it's not required, has a default and not in the mappings\n    if(!input.required && !mappings[input.name] && input['default']){\n      //add the default\n      mappings[input.name] = input['default'];\n    }\n  }\n\n  if(errs.length > 0){\n    throw new Error('Required Mappings Missing: ' + errs.join(','));\n  }else{\n    return mappings;\n  }\n};\n\n\n/**\n * Token Replacement on a string\n * @param  {string} template string template\n * @param  {object} params   object hash that maps to the tokens to be replaced\n * @return {string}          string with values replaced\n */\nCedar._supplant = function( tmpl, params ){\n  return tmpl.replace(/{([^{}]*)}/g,\n    function (a, b) {\n      var r = Cedar._getTokenValue(params, b);\n      return typeof r === 'string' || typeof r === 'number' ? r : a;\n    }\n  );\n};\n\n/*\n* Recursively merge properties of two objects \n*/\nCedar._mergeRecursive = function(obj1, obj2) {\n  for (var p in obj2) {\n    if (obj2.hasOwnProperty(p)) {\n      try {\n        // Property in destination object set; update its value.\n        if ( obj2[p].constructor===Object || obj2[p].constructor===Array) {\n          obj1[p] = Cedar._mergeRecursive(obj1[p], obj2[p]);\n\n        } else {\n          obj1[p] = obj2[p];\n\n        }\n\n      } catch(e) {\n        // Property in destination object not set; create it and set its value.\n        obj1[p] = obj2[p];\n\n      }\n    }\n  }\n\n  return obj1;\n};\n\n/**\n * Get the value of a token from a hash\n * @param  {[type]} tokens    [description]\n * @param  {[type]} tokenName [description]\n * @return {[type]}           [description]\n * Pulled from gulp-token-replace (MIT license)\n * https://github.com/Pictela/gulp-token-replace/blob/master/index.js\n * \n */\nCedar._getTokenValue = function(tokens, tokenName) {\n  var tmpTokens = tokens;\n  var tokenNameParts = tokenName.split('.');\n  for (var i = 0; i < tokenNameParts.length; i++) {\n    if (tmpTokens.hasOwnProperty(tokenNameParts[i])) {\n      tmpTokens = tmpTokens[tokenNameParts[i]];\n    } else {\n      return null;\n    }\n  }\n  return tmpTokens;\n};\n\n/**\n * Serilize an object into a query string\n * @param  {object} params Params for the query string\n * @return {string}        query string\n */\nCedar._serializeQueryParams = function(params) {\n  var str = [];\n  for(var p in params){\n    if (params.hasOwnProperty(p)) {\n      var val = params[p];\n      if (typeof val !== \"string\") {\n          val = JSON.stringify(val);\n      }\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(val));\n    }\n  }\n  var queryString = str.join(\"&\");\n  return queryString;\n};\n\n  return Cedar;\n}));\n"]}